# Levenshtein distance

street = 'Favoritenstra√üe'
streets = ['Karlsplatz', 'Favoritenstrasse', 'Favoritenstr.', 'Stephansplatz',
           'Favritenstrasse', 'Operngasse', 'Favoritenstrasse',
           'Llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch']


def levenshtein(s1, s2):
    if len(s1) < len(s2): return levenshtein(s2, s1)
    if len(s2) == 0: return len(s1)
    previous_row = range(len(s2) + 1)
    i = 0
    for c1 in s1:
        current_row = [i + 1]
        j = 0
        for c2 in s2:
            current_row += [(min(previous_row[j + 1] + 1, current_row[j] + 1,
                previous_row[j] + (c1 != c2)))]
            j += 1
        previous_row = current_row
        i += 1
    return previous_row[-1]


if __name__ == '__main__':
    same = []
    for street_entry in streets:
        if levenshtein(street, street_entry) <= 2:
            same += [street_entry]
    print(same)
